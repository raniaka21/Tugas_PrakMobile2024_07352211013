import 'dart:io';

// Enum untuk jenis tiket
enum TicketType { Regular, VIP, Backstage }

// Model Tiket
class Ticket {
  final String buyerName;
  final TicketType type;

  Ticket(this.buyerName, this.type);

  // Menghitung harga berdasarkan jenis tiket
  double getPrice() {
    switch (type) {
      case TicketType.Regular:
        return 100.0;
      case TicketType.VIP:
        return 250.0;
      case TicketType.Backstage:
        return 500.0;
    }
  }

  // Mengecek apakah tiket memberikan akses ke area khusus
  bool hasSpecialAccess() {
    return type == TicketType.VIP || type == TicketType.Backstage;
  }

  @override
  String toString() {
    String access = hasSpecialAccess() ? "Ya" : "Tidak";
    return "Pembeli: $buyerName, Tipe Tiket: ${type.name}, Harga: Rp${getPrice()}, Akses Khusus: $access";
  }
}

// Fungsi untuk memesan tiket
Ticket? orderTicket() {
  print("\n--- Pemesanan Tiket Acara Musik ---");
  stdout.write("Masukkan nama pembeli: ");
  String? buyerName = stdin.readLineSync();

  if (buyerName == null || buyerName.isEmpty) {
    print("Nama pembeli tidak boleh kosong.");
    return null;
  }

  print("Pilih tipe tiket: ");
  print("1. Regular - Rp100");
  print("2. VIP - Rp250");
  print("3. Backstage - Rp500");
  stdout.write("Pilihan Anda (1/2/3): ");
  String? choice = stdin.readLineSync();

  TicketType? selectedType;
  switch (choice) {
    case '1':
      selectedType = TicketType.Regular;
      break;
    case '2':
      selectedType = TicketType.VIP;
      break;
    case '3':
      selectedType = TicketType.Backstage;
      break;
    default:
      print("Pilihan tidak valid.");
      return null;
  }

  return Ticket(buyerName, selectedType);
}

void main() {
  List<Ticket> tickets = [];

  // Menu loop untuk memesan tiket
  bool running = true;
  while (running) {
    print("\n--- Menu Pemesanan ---");
    print("1. Pesan Tiket");
    print("2. Lihat Daftar Tiket");
    print("3. Keluar");
    stdout.write("Pilih opsi: ");
    String? choice = stdin.readLineSync();

    switch (choice) {
      case '1':
        var ticket = orderTicket();
        if (ticket != null) {
          tickets.add(ticket);
          print("Tiket berhasil dipesan!\n$ticket");
        }
        break;
      case '2':
        if (tickets.isEmpty) {
          print("Belum ada tiket yang dipesan.");
        } else {
          print("\n--- Daftar Tiket ---");
          for (var ticket in tickets) {
            print(ticket);
          }
        }
        break;
      case '3':
        running = false;
        print("Keluar dari menu pemesanan.");
        break;
      default:
        print("Pilihan tidak valid, coba lagi.");
    }
  }
}
